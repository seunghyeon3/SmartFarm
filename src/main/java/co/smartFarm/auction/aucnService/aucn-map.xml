<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.smartFarm.auction.aucnService.AucnMapper">
	<!-- 경매 전체 조회 -->
	<select id="aucnList"
		resultType="co.smartFarm.auction.aucnService.AucnVO">
		SELECT A.AUCN_NO, A.AUCN_TITLE,A.AUCN_CON,
		A.AUCN_START_TIME, A.FIRST_BID, A.NOW_BID, A.NOW_BID_MEM_EMAIL,
		A.AUCN_WHET, A.MEM_EMAIL, A.NFT_NO, N.NFT_IMG
		FROM NFT N JOIN AUCN A
		ON(N.NFT_NO = A.NFT_NO)
	</select>
	<!-- SYSDATE 로 비교하여 설정시간부터 하루가 지나지 않은 경매 품목만 출력 -->
	 <select id="aucnEnable"
		resultType="co.smartFarm.auction.aucnService.AucnVO">
		SELECT *
		FROM(
		SELECT A.AUCN_NO, A.AUCN_TITLE,A. AUCN_CON,
		TO_CHAR (TO_DATE(a.AUCN_START_TIME, 'YYYY-MM-DD HH24:MI')+ 1,
		'YYYY-MM-DD HH24:MI') AS AUCN_START_TIME, A.FIRST_BID, A.NOW_BID,
		A.NOW_BID_MEM_EMAIL,
		A.AUCN_WHET, A.MEM_EMAIL, A.NFT_NO, N.NFT_IMG,
		CASE
		WHEN <![CDATA[TO_DATE(AUCN_START_TIME, 'YYYY-MM-DD HH24:MI') < SYSDATE+ 9/24]]>
		AND <![CDATA[SYSDATE+9/24 < TO_DATE(AUCN_START_TIME, 'YYYY-MM-DD HH24:MI')+1]]>
		THEN 'AUCNON'
		ELSE 'AUCNOFF'
		END AS AUCN_STATUS
		FROM NFT N JOIN AUCN A
		ON(N.NFT_NO = A.NFT_NO)
		)
		WHERE AUCN_STATUS = 'AUCNON'
	</select>
	<select id="aucnSelect" parameterType="int"
		resultType="co.smartFarm.auction.aucnService.AucnVO">
		SELECT A.AUCN_NO, A.AUCN_TITLE,A.AUCN_CON,
		TO_CHAR (TO_DATE(a.AUCN_START_TIME, 'YYYY-MM-DD HH24:MI')+ 1,
		'YYYY-MM-DD HH24:MI') AS AUCN_START_TIME, A.FIRST_BID, A.NOW_BID,
		A.NOW_BID_MEM_EMAIL,
		A.AUCN_WHET, A.MEM_EMAIL, A.NFT_NO, N.NFT_IMG,
		K.KIT_PRPOS, K.KIT_PLANT_NAME
		FROM NFT N JOIN AUCN A
		ON(N.NFT_NO =
		A.NFT_NO)
		AND AUCN_NO = #{aucn_no}
		JOIN KIT K
		ON (K.KIT_NO = N.KIT_NO)
	</select>
	<insert id="aucnInsert"
		parameterType="co.smartFarm.auction.aucnService.AucnVO">
		<selectKey keyProperty="aucn_no" resultType="int"
			order="BEFORE">
			SELECT NVL(MAX(AUCN_NO)+1,1) AS AUCN_NO FROM AUCN
		</selectKey>
		INSERT INTO AUCN(AUCN_NO, AUCN_TITLE, AUCN_CON,
		AUCN_START_TIME, FIRST_BID, NOW_BID, NOW_BID_MEM_EMAIL,
		AUCN_WHET,
		MEM_EMAIL, NFT_NO)
		VALUES(#{aucn_no}, #{aucn_title}, #{aucn_con},
		#{aucn_start_time}, #{first_bid}, #{now_bid},
		#{now_bid_mem_email},
		#{aucn_whet}, #{mem_email}, #{nft_no})
	</insert>

	<select id="aucnBid"
		parameterType="co.smartFarm.auction.aucnService.AucnVO"
		statementType="CALLABLE">
        <![CDATA[
        { call aucn_bid (
                #{now_bid_mem_email},
                #{now_bid},
                #{aucn_no}
            )}
        ]]>
	</select>

	<select id="aucnNoselect" resultType="int">
		SELECT
		NVL(MAX(AUCN_NO)+1,1) AS AUCN_NO FROM AUCN
	</select>

	<select id="aucnEndCheck" resultType="int">
		SELECT count(*)
		FROM AUCN
		WHERE TO_CHAR(TO_DATE(AUCN_START_TIME, 'yyyy-MM-dd HH24:mi')+1, 'yyyy-MM-dd HH24:mi')
		= TO_CHAR(SYSDATE+ 9/24, 'yyyy-MM-dd HH24:mi') 
	</select>
	
	<select id="aucnEndCheckdo" resultType="map">
		select TO_CHAR(sysdate+ 9/24, 'yyyy-MM-dd HH24:mi')a,  TO_CHAR(TO_DATE(AUCN_START_TIME, 'yyyy-MM-dd HH24:mi')+1, 'yyyy-MM-dd HH24:mi') b
		from aucn
		
	</select>
	
	<select id="aucnEnd" statementType="CALLABLE">
		<![CDATA[
        { call aucn_end }
        ]]>
	</select>
	
	<select id="aucnEndNo" resultType="co.smartFarm.auction.aucnService.AucnVO">
		SELECT aucn_no
		FROM AUCN
		WHERE TO_CHAR(TO_DATE(AUCN_START_TIME, 'yyyy-MM-dd HH24:mi')+1, 'yyyy-MM-dd HH24:mi')
		= TO_CHAR(SYSDATE+ 9/24, 'yyyy-MM-dd HH24:mi')
	</select>
	
	<select id="bidHistoryList" parameterType="String" resultType="co.smartFarm.auction.aucnService.BidHistoryVO">
		SELECT *
		FROM bid_history
		WHERE bid_history_mem_email = #{memEmail}
		AND withdraw_whet = 'N'
		AND aucn_whet = 'N'
	</select>
	
	<delete id="bidHistoryDelete" parameterType="int">
		DELETE 
		FROM bid_history
		WHERE bid_history_no = #{bidHistoryNo}
	</delete>
	
	<select id="bidHistoryAucnNo" parameterType="int" resultType="int">
		SELECT aucn_no
		FROM bid_history
		WHERE bid_history_no = #{bidHistoryNo}
	</select>
</mapper>
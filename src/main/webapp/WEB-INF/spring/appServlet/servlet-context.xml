<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 스케줄러 job -->
	<task:annotation-driven/>

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	
	<beans:bean id="beanNameViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>

	<!-- Tiles Resolves views -->
	<beans:bean
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<!-- order 은 실행 순서 -->
		<beans:property name="order" value="1" />
	</beans:bean>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- order 은 실행 순서 -->
		<beans:property name="order" value="2" />
	</beans:bean>

	<!-- Tiles -->
	<!-- Tiles 환경파일 설정 -->
	<beans:bean
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	<beans:bean id="excelDownloadView" class="co.smartFarm.admin.adminUtil.ExcelDownloadView"/>
    
    <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
    
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    
    <context:component-scan base-package="com.*" />
	

	<!-- Controller가 처리하지 못하는 요청은 WAS에게 처리하도록 해주는 설정 -->
	<default-servlet-handler />

	<!-- 웹 소켓 서버로 사용할 클래스의 bean을 생성 -->
	<beans:bean
		class="co.smartFarm.auction.aucnWeb.SocketHandler" id="myHandler" />

	<!-- 웹 소켓 서버와 URL을 매핑 -->
	<websocket:handlers>
		<websocket:mapping handler="myHandler"
			path="/websocket/broadcast.do" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="co.smartFarm.auction.aucnWeb.HandShakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>


	<context:component-scan
		base-package="co.smartFarm.*" />
</beans:beans>
